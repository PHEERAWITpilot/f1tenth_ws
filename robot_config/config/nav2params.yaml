
bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    transform_tolerance: 0.5
    # ✅ For navigate_through_poses (your main one)
    default_bt_xml_filename: "/home/f2/f1tenth_ws/src/robot_config/config/navigate_through_poses_ackermann_racing.xml"
    
    # ✅ ADD THIS: For navigate_to_pose (to prevent spin error)
    default_nav_to_pose_bt_xml: "/home/f2/f1tenth_ws/src/robot_config/config/navigate_through_poses_ackermann_racing.xml"
    default_server_timeout: 20
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_wait_action_bt_node
      #- nav2_back_up_action_bt_node
     #- nav2_spin_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
     #- nav2_spin_cancel_bt_node
     #- nav2_back_up_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node


controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 25.0
    failure_tolerance: 0.5
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.30
      movement_time_allowance: 5.0

    general_goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.10      # ✅ Fixed (was 0.100)
      yaw_goal_tolerance: 1.10

    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      
      # ✅ VELOCITY - Optimized for racing
      desired_linear_vel: 0.8
      min_linear_velocity: 0.15     # ✅ Lower minimum
      max_linear_velocity: 1.0      # ✅ Reduced from 1.2 for safety
      
      # ✅ LOOKAHEAD - Tighter for better tracking
      lookahead_time: 0.8           # ✅ Reduced from 1.0 - quicker reactions
      use_velocity_scaled_lookahead_dist: true
      min_lookahead_dist: 0.8       # ✅ Reduced from 0.6 - tighter tracking
      max_lookahead_dist: 3.0       # ✅ Reduced from 4.0 - more responsive
      max_robot_pose_search_dist: 3.0  # ✅ Added - tighter path following
      use_interpolation: true
      
      # ✅ CURVATURE - Unchanged (working well)
      use_fixed_curvature_lookahead: true
      curvature_lookahead_dist: 1.2
      
      # ✅ ACKERMANN - Unchanged
      use_rotate_to_heading: false
      allow_reversing: false
      
      # ✅ CURVE VELOCITY SCALING - Already good!
      use_regulated_linear_velocity_scaling: true
      regulated_linear_scaling_min_radius: 1.2  # ✅ You already have this!
      regulated_linear_scaling_min_speed: 0.3   # ✅ You already have this!
      regulate_by_approaching_angle: true       # ✅ You already have this!
      
      # ✅ COST-BASED VELOCITY SCALING - CRITICAL FIXES!
      use_cost_regulated_linear_velocity_scaling: true  # ✅ Added - enables wall avoidance
      cost_scaling_dist: 0.6        # ✅ Reduced from 0.8 - react earlier
      cost_scaling_gain: 3.0        # ✅ Increased from 0.7 - MUCH stronger reaction!
      inflation_cost_scaling_factor: 5.0  # ✅ Increased from 3.0 - very sensitive
      
      # ✅ COLLISION DETECTION - Unchanged
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      
      # ✅ APPROACH SCALING - Slightly tighter
      approach_velocity_scaling_dist: 1.5  # ✅ Reduced from 2.0
      
      # ✅ TRANSFORM - Unchanged
      transform_tolerance: 0.5



planner_server:
  ros__parameters:
    use_sim_time: false
    costmap_update_timeout: 2.0
    planner_plugins: ["GridBased"]
    
    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"
      
      # Goal tolerance
      tolerance: 0.50
      
      # Performance tuning
      downsample_costmap: true
      downsampling_factor: 4
      allow_unknown: true
      
      # Iterations
      max_iterations: 200000
      max_on_approach_iterations: 2500
      max_planning_time: 5.0  # ✅ Increase from 3.0 (for complex paths)
      
      # Analytic expansion
      analytic_expansion_max_cost: 150.0  # Your change ✅
      analytic_expansion_ratio: 3.0
      analytic_expansion_max_length: 6.0
      analytic_expansion_max_cost_override: false
     
      # Motion model
      motion_model_for_search: "DUBIN"
      minimum_turning_radius: 0.90  # ✅ Reduce from 0.80
      
      # ✅ COST PENALTIES - NO DUPLICATES!
      reverse_penalty: 50.0           # Strongly avoid reversing
      change_penalty: 2.0             # Penalize direction changes (was 0.0)
      non_straight_penalty: 2.5       # Penalize curves (was 1.6)
      cost_penalty: 50.0              # Strong wall avoidance (was 20.0)
      
      # ✅ ORIENTATION HANDLING (prevents forced U-turns)
      allow_primitive_interpolation: true
      use_final_approach_orientation: false
      
      # Smoother
      smoother:
        max_iterations: 100
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10



behavior_server:
  ros__parameters:
    use_sim_time: false
    cycle_frequency: 20.0
    global_frame: odom
    robot_base_frame: base_link
    simulate_ahead_time: 2.0
    behavior_plugins: [ "drive_on_heading", "wait"]



    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
      simulate_ahead_time: 2.0
      max_linear_vel: 0.5
      min_linear_vel: 0.2

    wait:
      plugin: "nav2_behaviors/Wait"
      simulate_ahead_time: 1.0



local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 25.0
      publish_frequency: 25.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 6
      height: 8
      resolution: 0.05
      footprint: "[[0.284, 0.14], [0.284, -0.14], [-0.284, -0.14], [-0.284, 0.14]]"
      plugins: ["obstacle_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        track_unknown_space: true
        observation_sources: scan
        scan:
          topic: /scan
          data_type: "LaserScan"
          marking: true
          clearing: true
        obstacle_max_range: 4.0
        obstacle_min_range: 0.25
        raytrace_max_range: 5.0
        raytrace_min_range: 0.25

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.40
        cost_scaling_factor: 2.0

      always_send_full_costmap: true

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_link
      resolution: 0.05
      footprint: "[[0.284, 0.14], [0.284, -0.14], [-0.284, -0.14], [-0.284, 0.14]]"
      track_unknown_space: false
      rolling_window: false
      always_send_full_costmap: true
      
      # ✅ FIXED: Added obstacle_layer for dynamic obstacle avoidance
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        enabled: true
        map_subscribe_transient_local: true
        subscribe_to_updates: false

      # ✅ OBSTACLE LAYER: Detects dynamic obstacles without overwriting static map
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        
        # Preserve static map while marking temporary obstacles
        combination_method: 1  # Max value - preserves static walls
        
        # LIDAR observation source
        observation_sources: scan
        scan:
          topic: /scan
          data_type: "LaserScan"
          marking: true           # Mark detected obstacles
          clearing: true          # Clear obstacles when no longer seen
          min_obstacle_height: 0.0
          max_obstacle_height: 2.0
          
        # Detection ranges (only nearby obstacles for racing)
        obstacle_max_range: 3.5   # Mark obstacles within 3.5m
        obstacle_min_range: 0.25  # Ignore very close noise
        raytrace_max_range: 4.5   # Clear obstacles up to 4.5m away
        raytrace_min_range: 0.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.35        # ✅ Increase from 0.45
        cost_scaling_factor: 4.0      # ✅ Increase from 5.0



amcl:
  ros__parameters:
    use_sim_time: false
    base_frame_id: base_link
    global_frame_id: map
    odom_frame_id: odom
    
    # 🔥 CRITICAL FIX: Omni model for Ackermann
    robot_model_type: "nav2_amcl::OmniMotionModel"  # ✅ Correct for Ackermann!
    
    # Particles
    min_particles: 500
    max_particles: 1500
    
    # Laser - matched to 100° FOV
    laser_model_type: "likelihood_field"
    laser_max_range: 5.0
    laser_min_range: 0.20
    max_beams: 40
    laser_likelihood_max_dist: 1.0
    
    # Sensor model
    z_hit: 0.85
    z_rand: 0.10
    z_max: 0.05
    sigma_hit: 0.10
    
    # Update thresholds
    update_min_d: 0.12
    update_min_a: 0.25
    resample_interval: 1
    
    # Resampling
    pf_err: 0.05
    pf_z: 0.99
    
    # 🔥 Recovery (critical for position jumps)
    recovery_alpha_slow: 0.001
    recovery_alpha_fast: 0.1
    
    transform_tolerance: 0.5
    set_initial_pose: false
    always_reset_initial_pose: false


